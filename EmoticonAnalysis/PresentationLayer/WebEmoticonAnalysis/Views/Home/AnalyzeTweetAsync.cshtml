@model WebEmoticonAnalysis.Models.ResultModel

@{
    /**/

    ViewBag.Title = "AnalyzeTweet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AnalyzeTweet</h2>
<ul class="nav nav-tabs" id="myTab" role="tablist">
    @if (Model.Tweets != null)
    {
        <li class="nav-item">
            <a class="nav-link active" id="search-tab" data-toggle="tab" href="#search" role="tab" aria-controls="search" aria-selected="true">Search</a>
        </li>
    }
    @if (Model.Tweet != null)
    {
        <li class="nav-item">
            <a class="nav-link" id="tweet-tab" data-toggle="tab" href="#tweet" role="tab" aria-controls="tweet" aria-selected="false">Tweet</a>
        </li>
    }
    @if (Model.Text != null)
    {
        <li class="nav-item">
            <a class="nav-link" id="text-tab" data-toggle="tab" href="#text" role="tab" aria-controls="text" aria-selected="false">Text</a>
        </li>
    }

</ul>
<div class="tab-content" id="myTabContent">
    @if (Model.Text != null)
    {
        <div class="tab-pane fade show active" id="search" role="tabpanel" aria-labelledby="search-tab">
            <table class="table table-sm tweet-result-table table-bordered">
                <caption>Search results for "@ViewBag.SearchString". Results - @Model.Tweets.Count </caption>
                <thead>
                    <tr>
                        @*<th scope="col">Tweet Id</th>*@
                        <th scope="col">Tweet Author</th>
                        <th scope="col">Text</th>
                        <th scope="col">Smile</th>
                        <th scope="col">Distionary</th>
                        <th scope="col">SVM</th>
                        <th scope="col">Naive Bayes</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var t in Model.Tweets)
                    {
                        <tr class=@t.TotalResult>
                            @*<td scope="row">@t.TweetId</td>*@
                            <td>@t.TweetAuthor</td>
                            <td>@t.TweetText</td>
                            <td><div class="containing-tabl"><div class="centre-align"><div class=@t.SmileResult></div></div></div></td>
                            <td><div class="containing-tabl"><div class="centre-align"><div class=@t.DictionaryResult></div></div></div></td>
                            <td><div class="containing-tabl"><div class="centre-align"><div class=@t.SvmResult></div></div></div></td>
                            <td><div class="containing-tabl"><div class="centre-align"><div class=@t.BayesResult></div></div></div></td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
    }

    @if (Model.Text != null)
    {
        <div class="tab-pane fade" id="tweet" role="tabpanel" aria-labelledby="tweet-tab">
            <div>
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Tweet.TweetId)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Tweet.TweetId)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Tweet.TweetAuthor)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Tweet.TweetAuthor)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Tweet.TweetText)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Tweet.TweetText)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Tweet.SmileResult)
                    </dt>

                    <dd>
                        <div class=@Model.Tweet.SmileResult></div>
                        @*@Html.DisplayFor(model => model.Tweet.SmileResult)*@
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Tweet.DictionaryResult)
                    </dt>

                    <dd>
                        <div class=@Model.Tweet.DictionaryResult></div>
                        @*@Html.DisplayFor(model => model.Tweet.DictionaryResult)*@
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Tweet.SvmResult)
                    </dt>

                    <dd>
                        <div class=@Model.Tweet.SvmResult></div>
                        @*@Html.DisplayFor(model => model.Tweet.SvmResult)*@
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Tweet.BayesResult)
                    </dt>

                    <dd>
                        <div class=@Model.Tweet.BayesResult></div>
                        @*@Html.DisplayFor(model => model.Tweet.BayesResult)*@
                    </dd>
                </dl>
            </div>
        </div>
    }

    @if (Model.Text != null)
    {
        <div class="tab-pane fade" id="text" role="tabpanel" aria-labelledby="text-tab">
            <div>
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Text.TweetText)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Text.TweetText)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Text.SmileResult)
                    </dt>

                    <dd>
                        <div class=@Model.Text.SmileResult></div>
                        @*@Html.DisplayFor(model => model.Text.SmileResult)*@
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Text.DictionaryResult)
                    </dt>

                    <dd>
                        <div class=@Model.Text.DictionaryResult></div>
                        @*@Html.DisplayFor(model => model.Text.DictionaryResult)*@
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Text.SvmResult)
                    </dt>

                    <dd>
                        <div class=@Model.Text.SvmResult></div>
                        @*@Html.DisplayFor(model => model.Text.SvmResult)*@
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Text.BayesResult)
                    </dt>

                    <dd>
                        <div class=@Model.Text.BayesResult></div>
                        @*@Html.DisplayFor(model => model.Text.BayesResult)*@
                    </dd>
                </dl>
            </div>

        </div>
    }

</div>

<p>
    @Html.ActionLink("Back", "Index")
</p>
